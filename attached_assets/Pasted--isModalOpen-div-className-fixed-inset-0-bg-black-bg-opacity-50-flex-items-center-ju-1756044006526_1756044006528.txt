{isModalOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
            {/* Modal Header */}
            <div className="bg-gray-800 text-white p-6 rounded-t-2xl relative">
              <button 
                onClick={closeModal}
                className="absolute top-4 right-4 text-gray-400 hover:text-white"
              >
                <X size={24} />
              </button>
              
              <div className="flex items-center gap-4">
                {profileImage ? (
                  <img 
                    src={profileImage} 
                    alt={lawyerData.name}
                    className="w-20 h-20 rounded-xl object-cover"
                  />
                ) : (
                  <div className="w-20 h-20 bg-orange-500 rounded-xl flex items-center justify-center text-white text-3xl font-bold">
                    {lawyerData.name.charAt(0).toUpperCase()}
                  </div>
                )}
                <div>
                  <h2 className="text-2xl font-bold">{lawyerData.name}</h2>
                  <div className="flex items-center gap-2 mt-1">
                    <span className={`w-3 h-3 rounded-full ${lawyerData.isOnline ? 'bg-green-500' : 'bg-gray-500'}`}></span>
                    <span className="text-gray-300">{lawyerData.isOnline ? 'Online' : 'Offline'}</span>
                    {lawyerData.verified && (
                      <span className="bg-orange-500 px-2 py-1 rounded text-xs">Verified Pro</span>
                    )}
                  </div>
                </div>
              </div>
            </div>

            {/* Modal Content */}
            <div className="p-6">
              {/* Contact Information */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-3">Contact Information</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="flex items-center gap-3">
                    <Mail className="text-gray-500" size={20} />
                    <span>{lawyerData.email}</span>
                  </div>
                  <div className="flex items-center gap-3">
                    <Phone className="text-gray-500" size={20} />
                    <span>{lawyerData.phoneNumber}</span>
                  </div>
                </div>
              </div>

              {/* Experience & Rating */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-3">Professional Details</h3>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div className="bg-purple-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-purple-600">{lawyerData.experience}</div>
                    <div className="text-sm text-gray-600">Years Experience</div>
                  </div>
                  <div className="bg-yellow-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-yellow-600">{lawyerData.rating}</div>
                    <div className="text-sm text-gray-600">Rating</div>
                  </div>
                  <div className="bg-blue-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-blue-600">{lawyerData.reviews}</div>
                    <div className="text-sm text-gray-600">Reviews</div>
                  </div>
                </div>
              </div>

              {/* Education */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
                  <GraduationCap className="text-gray-500" size={20} />
                  Education
                </h3>
                {lawyerData.education.map((edu, index) => (
                  <div key={index} className="bg-gray-50 p-4 rounded-lg mb-2">
                    <div className="font-semibold text-gray-800">{edu.degree.toUpperCase()}</div>
                    <div className="text-gray-600">{edu.institution}</div>
                    <div className="text-sm text-gray-500">Graduated: {edu.year}</div>
                  </div>
                ))}
              </div>

              {/* Specializations */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-3">Specializations</h3>
                <div className="flex flex-wrap gap-2">
                  {(lawyerData.specializationNames || ["General Practice"]).map((spec, index) => (
                    <span key={index} className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                      {spec}
                    </span>
                  ))}
                </div>
              </div>

              {/* Bio */}
              {lawyerData.bio && (
                <div className="mb-6">
                  <h3 className="text-lg font-semibold mb-3">About</h3>
                  <p className="text-gray-700 leading-relaxed">{lawyerData.bio}</p>
                </div>
              )}

              {/* Pricing Details */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-3">Consultation Rates</h3>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div className={`p-4 rounded-lg border-2 ${lawyerData.availability.audio ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                    <div className="text-center">
                      <div className="text-xl font-bold">₹{lawyerData.pricing.audio}/min</div>
                      <div className="text-sm text-gray-600">Audio Call</div>
                      <div className={`text-xs mt-1 ${lawyerData.availability.audio ? 'text-green-600' : 'text-red-600'}`}>
                        {lawyerData.availability.audio ? 'Available' : 'Unavailable'}
                      </div>
                    </div>
                  </div>
                  <div className={`p-4 rounded-lg border-2 ${lawyerData.availability.video ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                    <div className="text-center">
                      <div className="text-xl font-bold">₹{lawyerData.pricing.video}/min</div>
                      <div className="text-sm text-gray-600">Video Call</div>
                      <div className={`text-xs mt-1 ${lawyerData.availability.video ? 'text-green-600' : 'text-red-600'}`}>
                        {lawyerData.availability.video ? 'Available' : 'Unavailable'}
                      </div>
                    </div>
                  </div>
                  <div className={`p-4 rounded-lg border-2 ${lawyerData.availability.chat ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>
                    <div className="text-center">
                      <div className="text-xl font-bold">₹{lawyerData.pricing.chat}/min</div>
                      <div className="text-sm text-gray-600">Chat</div>
                      <div className={`text-xs mt-1 ${lawyerData.availability.chat ? 'text-green-600' : 'text-red-600'}`}>
                        {lawyerData.availability.chat ? 'Available' : 'Unavailable'}
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* Activity Information */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-3">Activity</h3>
                <div className="text-sm text-gray-600 space-y-1">
                  <div>Member since: {formatFirebaseDate(lawyerData.createdAt)}</div>
                  <div>Last active: {formatFirebaseDate(lawyerData.lastActive)}</div>
                  <div>Profile updated: {formatFirebaseDate(lawyerData.updatedAt)}</div>
                  <div>Total connections: {lawyerData.connections}</div>
                  <div>Lawyer ID: {lawyerData.id}</div>
                </div>
              </div>

              {/* Action Buttons */}
              <div className="flex gap-4">
                <button className="flex-1 bg-orange-500 text-white py-3 rounded-lg font-semibold flex items-center justify-center gap-2 hover:bg-orange-600 transition-colors">
                  <PhoneCall size={18} />
                  Call Now
                </button>
                <button className="flex-1 border-2 border-gray-300 text-gray-700 py-3 rounded-lg font-semibold flex items-center justify-center gap-2 hover:bg-gray-50 transition-colors">
                  <MessageCircle size={18} />
                  Send Message
                </button>
              </div>
            </div>
          </div>
        </div>
      )}